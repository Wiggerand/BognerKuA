Erstellen eines Projektes Library

rails new library
gem files bearbeitet
bundle inst.
rails g foundation:install
In den Stylesheets hinzufügen
*= require foundation
Die topbar kopieren und unter app/views/layouts als z.B. _top_bar.html.erb
<div class="top-bar">
  <div class="top-bar-left">
    <ul class="dropdown menu" data-dropdown-menu>
      <li class="menu-text">Site Title</li>
      <li>
        <a href="#">One</a>
        <ul class="menu vertical">
          <li><a href="#">One</a></li>
          <li><a href="#">Two</a></li>
          <li><a href="#">Three</a></li>
        </ul>
      </li>
      <li><a href="#">Two</a></li>
      <li><a href="#">Three</a></li>
    </ul>
  </div>
  <div class="top-bar-right">
    <ul class="menu">
      <li><input type="search" placeholder="Search"></li>
      <li><button type="button" class="button">Search</button></li>
    </ul>
  </div>
</div>
In die application.html.erb -> ' <%= render 'layouts/top_bar' %>' hinzufuegen
In der application.html.erb evtl ein Hintergrund Bild einfügen
<%= image_tag 'logo.jpg' %>
Resource author erstellen mit 
rails g scaffold author firstname lastname
Erstelle eine Resource books mit den Spalten
author_id:integer title year:date description:text author:references
Tabellen erstellen rake db:migrate
Im config/routes.rb
root 'authors#index'	<<<lädt die author seite als inde
  resources :authors   <<resource books ist untergeordnet
  	resources :books
  end
  einfügen
In der models/author.rb
class Author < ApplicationRecord
	has_many :books	<<<<<
end
hinzufügen

Der Seeds-Datei erstellen mit 3 Autoren und 5 Büchern
author1 = Author.create(firstname: "Thomas", lastname: "Bogner")
author2 = Author.create(firstname: "Reinhard", lastname: "Janz")
author3 = Author.create(firstname: "Steve", lastname: "Hoffmann")

author1.books.create(title: "Programmieren ist voll easy", year: "1946-07-24",description: "Angefangen habe ich auf der Schreibmaschine")
author2.books.create(title: "Das kleine ein mal eins der Mathematik", year: "1976-05-08", description: "Schon im Kindergarten konnte ich besser rechnen als die Betreuer;-)")
author3.books.create(title: "Sicherheit im World wide web", year: "2012-10-18", description: "Unsichtbar im Netz!")
author1.books.create(title: "Debian Samba Server", year: "1976-05-02", description: "So easy ist die Konfiguration")
author2.books.create(title: "Komplexe Rechnungen", year: "2015-09-22", description: "Ich kann alles im Kopf rechnen")
In der Konsole muss der Befehl ausgeführt werden
rake db:seed

Als erstes wird im books_controller die Methode index und new geändert:
def index
    @books = @author.books
  end
  def new
    @book = @author.books.new
  end
 
 - Den Pfad ändern in der Methode create, update und destroy:
  redirect_to author_book_path(@author.id, @book.id)
  
  Die destroy Methode bekommt einen anderen redirect:
  redirect_to author_book_path(@author.id)

  before_action :set_author
  Methode im Private erstellen:
  def set_author
      @author = Author.find(params[:author_id])
    end

- Auf der views/books/index.html.erb
die link_to erweitern auf books:
<td><%= link_to 'Books', author_books_path(author.id) %></td>
Der Link Books mit Pfadangabe verändern: (link_to show, edit, destroy und new:
<%= link_to 'Show', author_book_path(@author.id, book.id) %>
<%= link_to 'Edit', edit_author_book_path(@author.id, book.id) %>
<%= link_to 'Destroy', author_book_path(@author.id, book.id), method: :delete, data: { confirm: 'Are you sure?' } %>
<%= link_to 'New Book', new_author_book_path(@author.id) %>

Damit nicht das array angezeigt wird wird in der view/books/index.html.erb erweitert:
<td><%= book.author.firstname %> <%= book.author.lastname %></td>

Books Show wirft einen fehler raus link_to edit, route fehlerhaft:
in <%= link_to 'Edit', edit_author_book_path(@book) %> ändern.
link_to back fehlerhaft.
In <%= link_to 'Back', author_books_path %> ändern.
Der Autor wird als array angezeigt:
Erweitern zu first und lastname:
<strong>Author:</strong>
  <%= @book.author.firstname %> <%= @book.author.lastname %>
</p>


Ein Buch editieren verweißt auf die views/books/_form.html.erb
form_for muss geändert werden:
<%= form_for([@author, @book]) do |f| %>

Als nächstes wird die views/books/edit.html.erb als fehlerhaft beschrieben. Der Pfad muss geändert werden in:
<%= link_to 'Show', author_book_path %> |
<%= link_to 'Back', author_books_path %>

Bis hier läuft alles!!!

Aufgabe Zeile 17
Gemfile auskommentieren
gem 'bcrypt', '~> 3.1.7'
bundle install

rails g scaffold user login email admin:boolean birthday:date active:boolean password:digest

rake db:migrate
view/users _form.html.erb checkboxen auskommentieren
<!--	-->


In der routes.rb von users_new auf signup verweisen
	get 'signup' => 'users#new'

Den Link zum Sign Up hinzufügen in der _top_bar.html.erb
	<%= link_to 'Sign Up', signup_path %>

Session Controller muss	generiert werden.
	rails g controller session
In der routes.rb die resource hinzufügen:
	resource :session 
Unter den Routen ist die Session jetzt zu sehen.

In den views/session muss new.html.erb erstellt werden und mit
	<h1>Sign In</h1>

<%= form_tag(session_path) do %>

	<fieldset>
		<div class="row">
			<div class="medium-4 columns"></div>
			<%= label_tag :email %>
			<div class="medium-8 columns"></div>
			<%= email_field_tag :email, params[:email], autofocus: true %> 
		</div>
		<div class="row">
			<div class="medium-4 columns"></div>
			<%= label_tag :password %>
			<div class="medium-8 columns"></div>
			<%= password_field_tag :password, nil %>
		</div>
		<div class="row">
			<div class="medium-4 columns"></div>
			<%= submit_tag 'SignIn' %>
			<div class="medium-8 columns"></div>

		</div>

	</fieldset>
<% end %>
	gefüllt werden.

Im session controller methoden erstellen:
def new
	end

	def create
		user = User.find_by(email: params[:email])
		if user && user.authenticate(params[:password])
			session[:user_id] = user.id
			flash[:notice] = "Welcome back #{user.login.capitalize}!"
			redirect_to root_path
		else
			flash.now[:alert] = "Ungültige Anmeldedaten!"
			render :new
		end
	end

	def destroy
  		session[:user_id] = nil
  		redirect_to root_path, notice: "Ausgeloggt. Bis zum nächsten mal!"
end

In der _top_bar.html.erb wird der sign in und up erweitert mit logout wenn
der derzeitige Benutzer schon eingeloggt ist.
	<% if current_user %>
      <%= current_user.login.capitalize %>
        <%= link_to 'Log out', session_path, method: :delete %>
    <% else %>
      <li><%= link_to 'Sign Up', signup_path %></li>
      <li><%= link_to 'Sign In', new_session_path %></li>
    <% end %>

Dann muss der application controller erweitert werden mit dem current_user und require_sigin:

	def current_user
  	@current_user = User.find(session[:user_id]) if session[:user_id]  	
  end
  	helper_method :current_user
  
  def require_signin
  	unless current_user
  	redirect_to new_session_url, alert: "Please SigIn first!"
  	end
  end
  rails c 
u = User.first
u.admin = true
u.save
Setzt einen Benutzer auf Admin Status

Um nur den Admin dazu bringen User zu löschen muss folgendes getan werden:
Im application_controler kommt die methode current_user_admin? hinzu:
	
	def current_user_admin?
  		current_user && current_user.admin?
  	end

  	helper_method :current_user_admin?


 Und in der index.html.erb wird folgendes eingetragen damit der Admin
 alles angezeigt bekommt und normale User nur den Show Button bekommen:
 	<% if current_user %>
        <td><%= link_to 'Show', user %></td>
        <% if current_user_admin? %>
        <td><%= link_to 'Edit', edit_user_path(user) %></td>
        <td><%= link_to 'Destroy', user, method: :delete, data: { confirm: 'Are you sure?' } %></td>
        <% end %>
        <% end %>

8.
rails g scaffold lending lending_date:date return_date:date book:references user:references

9.
Es muss ein User angemeldet sein, damit er ein Buch ausleihen kann, und das Buch darf nicht ausgeliehen sein. Wenn ein User ein Buch ausleiht, dann wird in der Resource lending ein Datensatz angelegt, das lending_date wird auf das aktuelle Datum gesetzt. Wird das Buch zurückgegeben, dann wird das return_date auf den aktuellen Datumswert gesetzt.
